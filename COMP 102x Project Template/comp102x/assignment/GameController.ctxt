#BlueJ class context
comment0.params=gameModel\ gameView\ studentLogic
comment0.target=GameController(GameModel,\ GameView,\ GameLogic)
comment0.text=\r\n\ Constructs\ a\ game\ controller.\r\n\ \r\n\ @param\ gameModel\ the\ game\ model\ to\ be\ controlled.\r\n\ @param\ gameView\ the\ game\ view\ to\ be\ controlled.\r\n\ @param\ studentLogic\ the\ delegated\ logic\ implemented\ by\ students.\r\n
comment1.params=
comment1.target=void\ startGame()
comment1.text=\r\n\ Starts\ the\ game.\r\n\ \r\n\ This\ method\ asks\ the\ user\ to\ choose\ a\ suitable\ level,\ updates\ the\ game\r\n\ model\ and\ game\ view\ accordingly\ and\ starts\ the\ timers.\r\n
comment10.params=
comment10.target=void\ moveGoals()
comment10.text=\r\n\ Moves\ the\ goals\ to\ new\ positions.\r\n\ \r\n\ This\ methods\ updates\ the\ internal\ goal\ positions\ and\ the\ graphical\r\n\ representation\ of\ the\ goals.\r\n
comment11.params=
comment11.target=void\ updateHighScoreRecords()
comment11.text=\r\n\ Updates\ the\ highscore\ records.\r\n\ \r\n\ This\ method\ reads\ the\ previous\ saved\ game\ records\ and\ updates\ it\ with\ the\r\n\ current\ record\ by\ using\ the\ student\ implemented\ controller.\r\n
comment12.params=
comment12.target=void\ outputHighScoreTable()
comment12.text=\r\n\ Outputs\ a\ highscore\ table.\r\n\ \r\n\ This\ method\ outputs\ a\ highscore\ table\ by\ reading\ the\ most\ updated\ records\r\n\ and\ then\ process\ it\ with\ the\ student\ implemented\ controller.\r\n
comment13.params=e
comment13.target=void\ mouseMoved(java.awt.event.MouseEvent)
comment13.text=\ (non-Javadoc)\r\n\ @see\ java.awt.event.MouseMotionListener\#mouseMoved(java.awt.event.MouseEvent)\r\n\ \r\n\ Bridging\ a\ mouse\ move\ into\ an\ aiming\ event.\r\n
comment14.params=e
comment14.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment14.text=\ (non-Javadoc)\r\n\ @see\ java.awt.event.MouseListener\#mouseClicked(java.awt.event.MouseEvent)\r\n\ \r\n\ Bridging\ a\ mouse\ click\ to\ a\ shooting\ event.\r\n
comment15.params=e
comment15.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment15.text=\r\n\ (non-Javadoc)\r\n\ @see\ java.awt.event.ActionListener\#actionPerformed(java.awt.event.ActionEvent)\r\n\ \r\n\ Bridging\ a\ timer\ event\ to\ a\ time\ decreased\ event\ or\ a\ move\ goal\ event\r\n\ by\ inspecting\ the\ action\ command\ of\ the\ timer\ event.\r\n
comment16.params=soundType
comment16.target=void\ playSound(int)
comment16.text=\r\n\ Plays\ a\ sound\ according\ to\ the\ type\ of\ sound\ input.\r\n\ @param\ soundType\ the\ type\ of\ sound\ to\ play.\r\n
comment17.params=e
comment17.target=void\ mouseDragged(java.awt.event.MouseEvent)
comment18.params=e
comment18.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment19.params=e
comment19.target=void\ mouseExited(java.awt.event.MouseEvent)
comment2.params=
comment2.target=void\ endGame()
comment2.text=\r\n\ Ends\ the\ game.\r\n\ \r\n\ This\ method\ rounds\ up\ the\ game\ by\ updating\ the\ game\ model\ and\ game\ view\r\n\ accordingly\ and\ stopping\ the\ timers.\ Records\ of\ the\ game\ will\ also\ be\r\n\ shown.\r\n
comment20.params=e
comment20.target=void\ mousePressed(java.awt.event.MouseEvent)
comment21.params=e
comment21.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment22.params=
comment22.target=void\ waitForGameLoopToEnd()
comment22.text=\r\n\ Asks\ the\ calling\ thread\ to\ wait\ for\ the\ game\ loop\ to\ end.\r\n
comment23.params=
comment23.target=void\ endGameLoop()
comment23.text=\r\n\ Signals\ to\ the\ waiting\ thread\ that\ the\ game\ loop\ has\ ended.\r\n
comment3.params=
comment3.target=void\ run()
comment4.params=x\ y
comment4.target=void\ aim(int,\ int)
comment4.text=\r\n\ Aims\ to\ a\ goal\ by\ specifying\ the\ mouse\ position.\r\n\ \r\n\ This\ method\ aims\ to\ the\ goal\ by\ updating\ both\ the\ graphical\r\n\ representation\ and\ the\ internal\ data\ of\ the\ arrow.\ If\ shooting\ is\ not\r\n\ currently\ in\ progress,\ the\ graphical\ representation\ and\ the\ internal\ data\r\n\ of\ the\ football.\r\n\ \r\n\ @param\ x\ the\ x\ position\ of\ the\ mouse.\r\n\ @param\ y\ the\ y\ position\ of\ the\ mouse.\r\n
comment5.params=
comment5.target=void\ updateFootball()
comment5.text=\r\n\ Updates\ the\ graphical\ representation\ and\ the\ internal\ date\ of\ the\ football.\r\n
comment6.params=
comment6.target=void\ shoot()
comment6.text=\r\n\ Shoots\ the\ football\ and\ check\ if\ there\ is\ goal\ hit.\r\n\ \r\n\ This\ method\ plays\ the\ shooting\ animation\ and\ checks\ if\ any\ goal\ is\ hit\r\n\ after\ shooting.\ It\ will\ update\ both\ the\ graphics\ and\ data\ and\ finally\ it\r\n\ will\ check\ if\ the\ end\ game\ condition\ of\ all\ goals\ being\ hit\ is\r\n\ attained.\r\n
comment7.params=
comment7.target=void\ run()
comment8.params=milliseconds
comment8.target=void\ pause(int)
comment8.text=\r\n\ Pauses\ the\ current\ thread\ for\ an\ approximate\ amount\ of\ time.\r\n\ @param\ milliseconds\ the\ designated\ time\ for\ the\ thread\ to\ be\ paused.\r\n
comment9.params=
comment9.target=void\ countDown()
comment9.text=\r\n\ Counts\ down\ the\ time\ of\ the\ game.\r\n\ \r\n\ This\ method\ decreases\ the\ time\ left\ for\ the\ game\ and\ displays\ the\r\n\ decreased\ time\ on\ the\ screen.\ If\ the\ time\ is\ zero\ after\ decreasing\ and\r\n\ not\ shooting\ is\ occurring,\ ends\ the\ game.\r\n
numComments=24
